devtools::load_all(".")
?interaction.plot
library(catstats2)
?intplot
?intplotarray
data(treadmill)
?treadmill
data(full100results)
dim(full100results)
full100results
library(catstats2)
library(catstats2)
data(full100results)
View(full100results)
full100results
?full100results
library(catstats2)
?full100results
data"full100results"
data("full100results")
data(m100results)
m100results
library(catstats2)
library(catstats2)
data("full100results")
full100results
View(full100results)
?full100results
library(catstats2)
library(catstats2)
?full100results
library(catstats2)
library(catstats2)
library(catstats2)
?full100results
library(catstats2)
?full100results
devtools::load_all(".")
library(catstats2)
?full100results
m100results
library(catstats2)
?full100results
library(catstats2)
library(catstats2)
?full100results
library(catstats2)
library(catstats2)
?full100results
library(catstats2)
?full100results
library(catstats2)
?full100results
library(catstats2)
?full100results
devtools::load_all(".")
library(catstats2)
?full100results
library(catstats2)
library(catstats2)
?full100results
full100results
data(full100results)
?full100results
install.packages("Sleuth3")
library(catstats2)
data(full100results)
?full100results
??full100results
library(catstats2)
data("full100results")
?full100results
library(catstats2)
library(catstats2)
data(f100results)
data(full100results)
?full100results
library(catstats2)
data(full100results)
?full100results
library(catstats2)
library(catstats2)
library(catstats2)
?full100results
library(catstats2)
?w2007
install.packages(c("aplot", "BH", "bookdown", "broom", "broom.helpers", "bslib", "cli", "clue", "colorspace", "curl", "data.table", "datawizard", "dbplyr", "digest", "doRNG", "DT", "emmeans", "epiR", "eulerr", "evaluate", "FactoMineR", "fansi", "flextable", "forestplot", "formatR", "fs", "future", "gdtools", "gert", "Gmisc", "gmp", "gower", "graphlayouts", "gtools", "gtsummary", "highr", "Hmisc", "htmltools", "htmlwidgets", "httpuv", "insight", "isoband", "jpeg", "jsonlite", "jtools", "kernelshap", "ks", "lava", "listenv", "locfit", "lubridate", "maptools", "matrixStats", "mice", "mixtools", "ncdf4", "officer", "openssl", "ordinal", "packrat", "parallelly", "pbapply", "pbkrtest", "pkgbuild", "pkgdown", "png", "progressr", "purrr", "ragg", "raster", "Rcpp", "RcppArmadillo", "recipes", "rgl", "rmarkdown", "Rmpfr", "robustHD", "roxygen2", "rsconnect", "rsvg", "s2", "sass", "segmented", "shapviz", "shiny", "sp", "stringi", "stringr", "styler", "terra", "testthat", "tidyr", "tidytree", "timechange", "timeDate", "tinytex", "units", "vctrs", "vroom", "whisker", "wk", "xfun", "xgboost", "XML", "yaml", "yulab.utils"))
install.packages(c("aplot", "BH", "bookdown", "broom", "broom.helpers", "bslib", "cli", "clue", "colorspace", "curl", "data.table", "datawizard", "dbplyr", "digest", "doRNG", "DT", "emmeans", "epiR", "eulerr", "evaluate", "FactoMineR", "fansi", "flextable", "forestplot", "formatR", "fs", "future", "gdtools", "gert", "Gmisc", "gmp", "gower", "graphlayouts", "gtools", "gtsummary", "highr", "Hmisc", "htmltools", "htmlwidgets", "httpuv", "insight", "isoband", "jpeg", "jsonlite", "jtools", "kernelshap", "ks", "lava", "listenv", "locfit", "lubridate", "maptools", "matrixStats", "mice", "mixtools", "ncdf4", "officer", "openssl", "ordinal", "packrat", "parallelly", "pbapply", "pbkrtest", "pkgbuild", "pkgdown", "png", "progressr", "purrr", "ragg", "raster", "Rcpp", "RcppArmadillo", "recipes", "rgl", "rmarkdown", "Rmpfr", "robustHD", "roxygen2", "rsconnect", "rsvg", "s2", "sass", "segmented", "shapviz", "shiny", "sp", "stringi", "stringr", "styler", "terra", "testthat", "tidyr", "tidytree", "timechange", "timeDate", "tinytex", "units", "vctrs", "vroom", "whisker", "wk", "xfun", "xgboost", "XML", "yaml", "yulab.utils"))
install.packages(c("aplot", "BH", "bookdown", "broom", "broom.helpers", "bslib", "cli", "clue", "colorspace", "curl", "data.table", "datawizard", "dbplyr", "digest", "doRNG", "DT", "emmeans", "epiR", "eulerr", "evaluate", "FactoMineR", "fansi", "flextable", "forestplot", "formatR", "fs", "future", "gdtools", "gert", "Gmisc", "gmp", "gower", "graphlayouts", "gtools", "gtsummary", "highr", "Hmisc", "htmltools", "htmlwidgets", "httpuv", "insight", "isoband", "jpeg", "jsonlite", "jtools", "kernelshap", "ks", "lava", "listenv", "locfit", "lubridate", "maptools", "matrixStats", "mice", "mixtools", "ncdf4", "officer", "openssl", "ordinal", "packrat", "parallelly", "pbapply", "pbkrtest", "pkgbuild", "pkgdown", "png", "progressr", "purrr", "ragg", "raster", "Rcpp", "RcppArmadillo", "recipes", "rgl", "rmarkdown", "Rmpfr", "robustHD", "roxygen2", "rsconnect", "rsvg", "s2", "sass", "segmented", "shapviz", "shiny", "sp", "stringi", "stringr", "styler", "terra", "testthat", "tidyr", "tidytree", "timechange", "timeDate", "tinytex", "units", "vctrs", "vroom", "whisker", "wk", "xfun", "xgboost", "XML", "yaml", "yulab.utils"))
library(catstats2)
library(catstats2)
?w2007
library(catstats2)
?w2007
library(catstats2)
knitr::opts_chunk$set(echo = TRUE)
options(show.signif.stars = FALSE)
library(tidyverse)
devtools::install_github('polynumeral/academia-citations/acadcites')
library('acadcites')
library(mosaic)
cites <- importData()
dim(cites)
save(data = cites, file = "cites.rda") #For adding "raw" data to R package
names(cites)
knitr::opts_chunk$set(echo = TRUE)
options(show.signif.stars = FALSE)
#install.packages('devtools')
library(tidyverse)
devtools::install_github('polynumeral/academia-citations/acadcites')
library('acadcites')
library(mosaic)
cites <- importData()
#More typical:
#require(readr)
#cites <- read_csv("C:/cites.csv") #Or read.csv
dim(cites)
cites %>% group_by(journal_title) %>% summarise(n()) %>% print()
cites_v1 <- cites %>% mutate(journal_title = factor(journal_title),
divisions = factor(divisions),
ArticleID = factor(be_cf_id)) %>%
dplyr::select(-doi_url, -document_type, -total_mt_cnt, -impact_factor_issn, -issn, -ae_work_ids, -agreement, -type_mt_cnt, -be_cf_id, -u_eq_p) %>%
rename(onacad = 'on_acad')
library(tabplot)
tableplot(cites_v1)
cites_v1 <- cites_v1 %>% addDivisions()
save(data = cites_v1, file = "cites.rda") #For adding "raw" data to R package
cites <- cites_v1
save(data = cites, file = "cites.rda") #For adding "raw" data to R package
library(catstats2)
data(cites)
dim(cites)
names(cites)
View(cites)
library(catstats2)
data(cites)
dim(cites)
?fct_recode
?cites
data(cites)
library(tidyverse)
set.seed(406)
cites_larger <- cites %>%
group_by(journal_title) %>%
mutate(totalcountsbyjournal = n()) %>% #add count of articles by journal
dplyr::filter(totalcountsbyjournal > 10) #filter to only journals with >10 articles (note impacts on SOI)
cites_strat <- cites_larger %>%
slice_sample(prop = 0.5) %>% #Sample 50% of articles in each selected journal
dplyr::select(-totalcountsbyjournal) #Remove temporary variable
cites_strat
names(cites_strat)
dim(cites_strat)
levels(cites_strat$onacad)
table(cites_strat$onacad)
knitr::opts_chunk$set(echo = TRUE)
options(show.signif.stars = FALSE)
cites_strat <- read_csv("cites_strat.csv") #Or read.csv
#Works if data set is stored in same location as .Rmd file
cites_strat <- cites_strat %>% mutate(
onacad = factor(onacad),
onacad = fct_recode(onacad,
"NotOnAcad" = 0,
"OnAcad" = 1),
online = factor(online),
online = fct_recode(online,
"NotOnline" = 0,
"Online" = 1))
library(catstats2)
data(cites)
?cites
library(catstats2)
data(cites)
?cites
colMeans(cites_strata %>% dplyr::select(1:23))
library(catstats2)
data(cites)
?cites
library(catstats2)
data(cites)
?cites
data(cites)
library(tidyverse)
set.seed(406)
cites_larger <- cites %>%
group_by(journal_title) %>%
mutate(totalcountsbyjournal = n()) %>% #add count of articles by journal
dplyr::filter(totalcountsbyjournal > 10) #filter to only journals with >10 articles (note impacts on SOI)
cites_strat <- cites_larger %>%
slice_sample(prop = 0.5) %>% #Sample 50% of articles in each selected journal
dplyr::select(-totalcountsbyjournal) #Remove temporary variable
cites_strat <- cites_strat %>% mutate(
onacad = factor(onacad),
onacad = fct_recode(onacad, #Change labels to be more explicit
"NotOnAcad" = "0",
"OnAcad" = "1"),
online = factor(online),
online = fct_recode(online,
"NotOnline" = "0",
"Online" = "1"))
colMeans(cites_strat %>% dplyr::select(1:23))
cites_strat %>% select(1:23)
colMeans(cites_strat %>% select(1:23))
names(cites_strat)
colMeans(cites_strat %>% dplyr::select(1:23))
colMeans(cites_strat %>% dplyr::select(1:6))
(cites_strat %>% dplyr::select(1:6))
?colMeans
base::colMeans(cites_strat %>% dplyr::select(1:6))
Matrix::colMeans(cites_strat %>% dplyr::select(1:6))
?colMeans
library(catstats2)
?Cites
?cites
library(catstats2)
?cites
library(catstats2)
?cites
library(catstats2)
?cites
library(tidyverse)
library(readr)
GBN <- read_csv("gundalebachnordin.csv")
library(readr)
gundalebachnordin <- read_csv("C:/Users/w76c139/OneDrive - Montana State University/LMMAER/gundalebachnordin.csv")
library(tidyverse)
library(readr)
GBN <- read_csv("gundalebachnordin.csv")
GBN <- read_csv("gundalebachnordin.csv")
GBN
save(data = GBN, file = "GBN.rda") #For adding "raw" data to R package
library(tidyverse)
library(yarrr)
library(readr)
library(tidyverse)
library(yarrr)
library(readr)
GBN <- read_csv("gundalebachnordin.csv")
#save(data = GBN, file = "GBN.rda") #For adding "raw" data to R package
GBN <- GBN %>% mutate(Species = factor(Species),
Treatment = factor(Treatment),
Block = factor(Block),
)
pirateplot(Nfixpermass ~ Species * Treatment, data = GBN,
inf.method = "ci",
inf.disp = "line",
pal = "southpark")
dim(GBN)
names(GBN)
library(catstats2)
?GBN
